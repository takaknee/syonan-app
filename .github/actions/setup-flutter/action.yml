name: 'Setup Flutter Environment'
description: 'Setup Flutter with multiple fallback methods for reliability'

inputs:
  flutter-version:
    description: 'Flutter version to install'
    required: false
    default: '3.x'
  channel:
    description: 'Flutter channel'
    required: false
    default: 'stable'

outputs:
  flutter-available:
    description: 'Whether Flutter is available'
    value: ${{ steps.check.outputs.available }}
  flutter-version:
    description: 'Installed Flutter version'
    value: ${{ steps.check.outputs.version }}
  flutter-path:
    description: 'Flutter installation path'
    value: ${{ steps.check.outputs.path }}

runs:
  using: 'composite'
  steps:
    - name: Setup Flutter (Primary)
      id: primary
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ inputs.flutter-version }}
        channel: ${{ inputs.channel }}
        cache: true
      continue-on-error: true

    - name: Manual Flutter Setup (Fallback)
      if: steps.primary.outcome == 'failure'
      id: fallback
      shell: bash
      run: |
        echo "üîÑ Primary setup failed, attempting manual setup..."
        
        # Create flutter directory
        mkdir -p $HOME/flutter
        cd $HOME/flutter
        
        # Download Flutter
        FLUTTER_VERSION="3.24.3"
        FLUTTER_URL="https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz"
        
        echo "üì• Downloading Flutter ${FLUTTER_VERSION}..."
        if wget -q --tries=3 --timeout=30 -O flutter.tar.xz "$FLUTTER_URL"; then
          echo "‚úÖ Download successful"
          tar -xf flutter.tar.xz --strip-components=1
          rm flutter.tar.xz
          
          # Add to PATH
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          export PATH="$HOME/flutter/bin:$PATH"
          
          # Precache
          flutter precache --web --no-android --no-ios --no-linux --no-windows --no-macos
        else
          echo "‚ùå Manual setup also failed"
          exit 1
        fi

    - name: Check Flutter Installation
      id: check
      shell: bash
      run: |
        if command -v flutter >/dev/null 2>&1; then
          echo "available=true" >> $GITHUB_OUTPUT
          version=$(flutter --version | head -1 | sed 's/Flutter //' | cut -d' ' -f1)
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "path=$(which flutter)" >> $GITHUB_OUTPUT
          echo "‚úÖ Flutter $version is available at $(which flutter)"
          
          # Show Flutter info
          flutter --version
          flutter doctor --no-version-check
        else
          echo "available=false" >> $GITHUB_OUTPUT
          echo "version=" >> $GITHUB_OUTPUT
          echo "path=" >> $GITHUB_OUTPUT
          echo "‚ùå Flutter is not available"
        fi
