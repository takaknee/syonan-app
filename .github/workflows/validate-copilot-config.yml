---
name: "Validate Copilot Configuration"

"on":
  pull_request:
    paths:
      - '.github/copilot.yml'
      - '.github/copilot-*.yml'
      - '.github/copilot-*.md'
      - '.vscode/settings.json'
      - '.github/prompts/**'
      - '.github/instructions/**'
  push:
    branches:
      - main
      - develop
    paths:
      - '.github/copilot.yml'
      - '.github/copilot-*.yml'
      - '.github/copilot-*.md'
      - '.vscode/settings.json'

jobs:
  validate-copilot-config:
    name: "Validate Copilot Configuration"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: "Setup Python for validation"
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: "Install validation tools"
        run: |
          pip install --quiet pyyaml jsonschema
          echo "Validation tools installed"
      
      - name: "Validate YAML files"
        run: |
          echo "üîç Validating YAML configuration files..."
          for file in .github/copilot*.yml .github/copilot*.yaml; do
            if [ -f "$file" ]; then
              echo "Validating: $file"
              python3 -c "import yaml; yaml.safe_load(open('$file', 'r'))" || exit 1
              echo "‚úÖ $file is valid"
            fi
          done
      
      - name: "Validate JSON files"
        run: |
          echo "üîç Validating JSON configuration files..."
          for file in .vscode/*.json; do
            if [ -f "$file" ]; then
              echo "Validating: $file"
              python3 -c "import json; json.load(open('$file', 'r'))" || exit 1
              echo "‚úÖ $file is valid"
            fi
          done
      
      - name: "Check Copilot context file"
        run: |
          echo "üîç Checking Copilot context files..."
          if [ -f ".github/copilot-context.md" ]; then
            echo "‚úÖ Copilot context file exists"
            lines=$(wc -l < .github/copilot-context.md)
            echo "üìä Context file has $lines lines"
            if [ $lines -gt 50 ]; then
              echo "‚úÖ Context file has sufficient content"
            else
              echo "‚ö†Ô∏è Context file might need more content"
            fi
          else
            echo "‚ùå Copilot context file not found"
            exit 1
          fi
      
      - name: "Check required Copilot files"
        run: |
          echo "üîç Checking required Copilot configuration files..."
          required_files=(
            ".github/copilot.yml"
            ".github/copilot-context.md"
            ".github/instructions/copilot-guidelines.md"
            ".vscode/settings.json"
          )
          
          for file in "${required_files[@]}"; do
            if [ -f "$file" ]; then
              echo "‚úÖ $file exists"
            else
              echo "‚ùå Required file $file is missing"
              exit 1
            fi
          done
      
      - name: "Validate prompt templates"
        run: |
          echo "üîç Checking prompt templates..."
          if [ -d ".github/prompts" ]; then
            template_count=$(find .github/prompts -name "*.md" | wc -l)
            echo "üìä Found $template_count prompt template files"
            if [ $template_count -gt 0 ]; then
              echo "‚úÖ Prompt templates exist"
            else
              echo "‚ö†Ô∏è No prompt templates found"
            fi
          else
            echo "‚ö†Ô∏è Prompts directory not found"
          fi
      
      - name: "Check VS Code Copilot settings"
        run: |
          echo "üîç Validating VS Code Copilot settings..."
          python3 << 'EOF'
          import json
          
          with open('.vscode/settings.json', 'r') as f:
              settings = json.load(f)
          
          # Check for essential Copilot settings
          copilot_settings = [
              'github.copilot.enable',
              'github.copilot.chat.localeOverride',
              'github.copilot.advanced'
          ]
          
          missing_settings = []
          for setting in copilot_settings:
              if setting not in settings:
                  missing_settings.append(setting)
          
          if missing_settings:
              print(f"‚ö†Ô∏è Missing Copilot settings: {', '.join(missing_settings)}")
          else:
              print("‚úÖ Essential Copilot settings are configured")
          
          # Check for Japanese locale
          if settings.get('github.copilot.chat.localeOverride') == 'ja':
              print("‚úÖ Japanese locale is configured")
          else:
              print("‚ö†Ô∏è Japanese locale not configured")
          
          # Check for enabled languages
          enabled_languages = settings.get('github.copilot.enable', {})
          if isinstance(enabled_languages, dict):
              dart_enabled = enabled_languages.get('dart', False)
              if dart_enabled:
                  print("‚úÖ Copilot is enabled for Dart")
              else:
                  print("‚ö†Ô∏è Copilot is not explicitly enabled for Dart")
          EOF
      
      - name: "Configuration validation summary"
        run: |
          echo "üéâ Copilot configuration validation completed!"
          echo ""
          echo "üìã Validation Summary:"
          echo "- YAML files: ‚úÖ Valid"
          echo "- JSON files: ‚úÖ Valid"
          echo "- Required files: ‚úÖ Present"
          echo "- VS Code settings: ‚úÖ Configured"
          echo ""
          echo "The GitHub Copilot configuration is ready for use!"
          echo "For best results, ensure developers install the recommended VS Code extensions."